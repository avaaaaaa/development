* built-in que in python
from collections import deque
que = deque()
que += “hey”		# [“h”, “e”, “y”]
que += [“hey”]		# [“h”, “e”, “y”, “hey”]
que.append(“hey”)	# [“h”, “e”, “y”, “hey”, “hey”]


* representing infinity, useful for minimization&maximization problems
import math
infinity = math.inf
infinity = -math.inf


* os.module
import os
os.sep
os.listdir()
os.path.join()
os.path.isfile()
os.path.isdir()
os.getcwd()

to construct directory or file path properly, use os.path module
	relative path: from current working directory
		os.getcwd()
		file_path = os.path.join("desktop", "test.py")
	absolute path: from the root ('C:')
		file_path = os.path.join("desktop", "test.py")
		abs_file_path = os.path.abspath(file_path)


* sys module
import sys
sys.argv: list of command line arguments, [0] is the script pathname
	py test.py we are arguments
	[0]: test.py
	[1]: we
	[2]: are
	[3]: arguments
sys.path: shows the PYTHONPATH where modules are searched


* OrderedDict
keeps the entry order of kv pairs in the dictionary
from collections import OrderedDict


* venv module
isolating the project
so the libraries a project uses won't affect other libraries other project uses


* random
random.choice()
random.sample()
random.randint()


* pyplot
from matplotlib import pyplot
x = [1, 2, 3]
y = [2, 4, 6]
pyplot.plot(x, y)
pyplot.show()


* datetime
date and time operations
from datetime import datetime


* from decimal import Decimal
decimal precision operations
a = 2.71
b = 1.16
c = a * b
d = Decimal(c).quantize(Decimal("1.00"))
print(c)
    4.579899...
print(d)
    4.58

Decimal(x) == 1 is True where x is one of [1, 1.0, "1", "1.0"]